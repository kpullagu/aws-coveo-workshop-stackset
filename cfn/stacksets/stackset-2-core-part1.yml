AWSTemplateFormatVersion: '2010-09-09'
Description: 'StackSet Layer 2: Core Infrastructure - Cognito, API Gateway, Lambda (Part 1 of 2)'

Parameters:
  StackPrefix:
    Type: String
    Default: workshop
    Description: Prefix for all resources
  
  Environment:
    Type: String
    Default: workshop
    Description: Environment name
  
  CoveoOrgId:
    Type: String
    Description: Coveo organization ID
  
  CoveoAnswerConfigId:
    Type: String
    Description: Coveo Answer API configuration ID
  
  SharedLambdaLayerArn:
    Type: String
    Description: Shared Lambda Layer ARN from master account

Conditions:
  HasSharedLayer: !Not [!Equals [!Ref SharedLambdaLayerArn, '']]

Resources:
  # ==========================================
  # Cognito User Pool
  # ==========================================
  
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub '${StackPrefix}-${AWS::AccountId}-user-pool'
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
          Mutable: true
        - Name: name
          AttributeDataType: String
          Required: false
          Mutable: true
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      UserAttributeUpdateSettings:
        AttributesRequireVerificationBeforeUpdate:
          - email

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub '${StackPrefix}-web-client'
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH
      SupportedIdentityProviders:
        - COGNITO
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - openid
        - email
        - profile
      AllowedOAuthFlowsUserPoolClient: true
      CallbackURLs:
        - 'http://localhost:3000'
      LogoutURLs:
        - 'http://localhost:3000'
      PreventUserExistenceErrors: ENABLED
      EnableTokenRevocation: true
      AccessTokenValidity: 1
      IdTokenValidity: 1
      RefreshTokenValidity: 30
      TokenValidityUnits:
        AccessToken: hours
        IdToken: hours
        RefreshToken: days

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Sub '${StackPrefix}-${AWS::AccountId}'
      UserPoolId: !Ref UserPool

Outputs:
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref UserPool
    Export:
      Name: !Sub '${StackPrefix}-UserPoolId'
  
  UserPoolArn:
    Description: Cognito User Pool ARN
    Value: !GetAtt UserPool.Arn
    Export:
      Name: !Sub '${StackPrefix}-UserPoolArn'
  
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref UserPoolClient
    Export:
      Name: !Sub '${StackPrefix}-UserPoolClientId'
